{"version":3,"sources":["js/List.js","actions/listActions.js","App.js","reportWebVitals.js","reducers/listReducers.js","reducers/appReducer.js","store.js","index.js"],"names":["List","state","isSideBarVisible","isModalOpen","selectedTherapistId","fullName","aboutMe","isEditSideBarOpen","pageIndex","pagination","pageCount","startIndex","endIndex","handleInitialState","setState","Math","ceil","props","therapists","length","handleClick","id","fetchTherapistDetails","closeSideBar","handleSwitchPage","_","page","handleOpenEditModal","handleOpenRemoveModal","handleCloseRemoveModal","handleCloseEditModal","handleRemoveTherapist","removeTherapist","handleEditTherapist","editTherapist","setUserFullName","e","setUserAboutMe","this","fetchTherapists","therapistDetails","width","height","className","viewBox","fill","xmlns","d","onClick","type","onChange","target","value","specializations","join","therapyTypes","certificates","map","therapist","name","slice","therapistId","src","avatarUrl","alt","splice","Pagination","count","variant","shape","Component","connect","main","dispatch","fetch","method","headers","body","JSON","stringify","citySeoName","then","res","json","data","catch","error","console","log","editedData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","listReducers","action","newState","therapistToEdit","findIndex","newList","editedTherapist","findTherapistToRemove","removeTherapistData","newTherapistList","newAllItemsData","appReducer","combineReducers","mainReducer","loggerMiddleware","createLogger","middlewares","thunkMiddleware","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4b5815d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../scss/Lista.scss\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchTherapists,\r\n  fetchTherapistDetails,\r\n  removeTherapist,\r\n  editTherapist,\r\n} from \"../actions/listActions\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    isSideBarVisible: false,\r\n    isModalOpen: false,\r\n    selectedTherapistId: 0,\r\n    fullName: \"\",\r\n    aboutMe: \"\",\r\n    isEditSideBarOpen: false,\r\n    pageIndex: 0,\r\n    pagination: {\r\n      pageCount: 36,\r\n      startIndex: 0,\r\n      endIndex: 10,\r\n    },\r\n  };\r\n  handleInitialState = () => {\r\n    this.setState({\r\n      pagination: {\r\n        pageCount: Math.ceil(this.props.therapists.length / 10),\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchTherapists();\r\n    if (this.props.therapists) {\r\n      this.handleInitialState();\r\n    }\r\n  }\r\n  handleClick = (id) => {\r\n    this.setState({\r\n      isSideBarVisible: true,\r\n      selectedTherapistId: id,\r\n    });\r\n    this.props.fetchTherapistDetails(id);\r\n  };\r\n\r\n  closeSideBar = () => {\r\n    this.setState({\r\n      isSideBarVisible: false,\r\n      isEditSideBarOpen: false,\r\n    });\r\n  };\r\n\r\n  handleSwitchPage = (_, page) => {\r\n    this.setState({\r\n      pagination: {\r\n        pageCount: this.state.pagination.pageCount,\r\n        startIndex: page * 10,\r\n        endIndex: page * 10 + 10,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleOpenEditModal = () => {\r\n    this.setState({\r\n      isEditSideBarOpen: true,\r\n    });\r\n  };\r\n\r\n  handleOpenRemoveModal = () => {\r\n    this.setState({\r\n      isModalOpen: true,\r\n      isSideBarVisible: false,\r\n    });\r\n  };\r\n  handleCloseRemoveModal = () => {\r\n    this.setState({\r\n      isModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleCloseEditModal = () => {\r\n    this.setState({\r\n      isEditSideBarOpen: false,\r\n    });\r\n  };\r\n\r\n  handleRemoveTherapist = (id) => {\r\n    this.props.removeTherapist(id);\r\n    this.setState({\r\n      isModalOpen: false,\r\n    });\r\n  };\r\n\r\n  handleEditTherapist = (fullName, aboutMe, id) => {\r\n    this.props.editTherapist(fullName, aboutMe, id);\r\n    this.setState({\r\n      isEditSideBarOpen: false,\r\n    });\r\n  };\r\n  setUserFullName = (e) => {\r\n    this.setState({\r\n      fullName: e,\r\n    });\r\n  };\r\n  setUserAboutMe = (e) => {\r\n    this.setState({\r\n      aboutMe: e,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      isSideBarVisible,\r\n      pagination,\r\n      selectedTherapistId,\r\n      isEditSideBarOpen,\r\n      aboutMe,\r\n      fullName,\r\n    } = this.state;\r\n    let { therapists, therapistDetails } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <header>\r\n          <svg\r\n            width=\"28\"\r\n            height=\"28\"\r\n            className=\"logo\"\r\n            viewBox=\"0 0 27 16\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M7.89551 16H4.82324V3.67871H0.193359V0.595703H12.5146V3.67871H7.89551V16ZM17.4305 3.67871V9.84473H20.5135C20.936 9.84473 21.3335 9.76595 21.7059 9.6084C22.0783 9.44368 22.4041 9.22168 22.6834 8.94238C22.9627 8.66309 23.1811 8.33724 23.3387 7.96484C23.5034 7.58529 23.5857 7.18424 23.5857 6.76172C23.5857 6.33919 23.5034 5.94173 23.3387 5.56934C23.1811 5.18978 22.9627 4.86035 22.6834 4.58105C22.4041 4.30176 22.0783 4.08333 21.7059 3.92578C21.3335 3.76107 20.936 3.67871 20.5135 3.67871H17.4305ZM17.4305 16H14.3475V0.595703H20.5135C21.0792 0.595703 21.6235 0.670898 22.1463 0.821289C22.6691 0.964518 23.1561 1.1722 23.6072 1.44434C24.0656 1.70931 24.4809 2.03158 24.8533 2.41113C25.2329 2.78353 25.5551 3.19889 25.8201 3.65723C26.0923 4.11556 26.2999 4.60612 26.4432 5.12891C26.5936 5.65169 26.6687 6.19596 26.6687 6.76172C26.6687 7.60677 26.5076 8.40527 26.1854 9.15723C25.8631 9.90202 25.4227 10.5537 24.8641 11.1123C24.3055 11.6709 23.6502 12.1113 22.8982 12.4336C22.1535 12.7559 21.3585 12.917 20.5135 12.917H17.4305V16Z\"\r\n              fill=\"#213C9A\"\r\n            />\r\n          </svg>\r\n          <h1>Lista specjalistów</h1>\r\n        </header>\r\n\r\n        <div>\r\n          {isSideBarVisible ? (\r\n            <div className=\"bcg\">\r\n              {\" \"}\r\n              <div className=\"sideBar\">\r\n                <span onClick={() => this.closeSideBar()} className=\"x\">\r\n                  x\r\n                </span>\r\n                {!isEditSideBarOpen ? (\r\n                  <div>\r\n                    <h1>Informacja o specjaliście</h1>\r\n\r\n                    <h3>Imię i nazwisko</h3>\r\n\r\n                    {therapistDetails &&\r\n                    therapistDetails.fullName &&\r\n                    therapistDetails.fullName !== \"\" ? (\r\n                      <p>{therapistDetails.fullName}</p>\r\n                    ) : (\r\n                      <p>Brak danych</p>\r\n                    )}\r\n\r\n                    <h3>Specjalizacje</h3>\r\n                    {therapistDetails &&\r\n                    therapistDetails.specializations &&\r\n                    therapistDetails.specializations.length !== 0 ? (\r\n                      <p>{therapistDetails.specializations.join(`, `)}</p>\r\n                    ) : (\r\n                      <p>Brak danych</p>\r\n                    )}\r\n                    <h3>Rodzaje terapii</h3>\r\n                    {therapistDetails &&\r\n                    therapistDetails.therapyTypes &&\r\n                    therapistDetails.therapyTypes.length !== 0 ? (\r\n                      <p>{therapistDetails.therapyTypes.join(`, `)}</p>\r\n                    ) : (\r\n                      <p>Brak danych</p>\r\n                    )}\r\n                    <h3>Certyfikaty</h3>\r\n\r\n                    {therapistDetails &&\r\n                    therapistDetails.certificates &&\r\n                    therapistDetails.certificates.length !== 0 ? (\r\n                      therapistDetails.certificates.map((therapist) => {\r\n                        return (\r\n                          <p>\r\n                            <li>{therapist.name}</li>\r\n                          </p>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <p>Brak danych</p>\r\n                    )}\r\n\r\n                    <h3>O mnie</h3>\r\n                    {therapistDetails &&\r\n                    therapistDetails.aboutMe &&\r\n                    therapistDetails.aboutMe !== \"\" ? (\r\n                      <p>{aboutMe || therapistDetails.aboutMe}</p>\r\n                    ) : (\r\n                      <p>Brak danych</p>\r\n                    )}\r\n                    <button\r\n                      className=\"edit\"\r\n                      onClick={() => this.handleOpenEditModal()}\r\n                    >\r\n                      Edytuj\r\n                    </button>\r\n                    <button\r\n                      className=\"remove\"\r\n                      onClick={() => this.handleOpenRemoveModal()}\r\n                    >\r\n                      Usuń\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"editSideBarWrapper\">\r\n                    <h1>Edytuj informacje o specjaliście</h1>\r\n                    <h3>Imię i nazwisko</h3>\r\n                    <input\r\n                      type=\"text\"\r\n                      onChange={(e) => this.setUserFullName(e.target.value)}\r\n                    ></input>\r\n                    <h3>O mnie</h3>\r\n                    <textarea\r\n                      onChange={(e) => this.setUserAboutMe(e.target.value)}\r\n                    ></textarea>\r\n                    <div className=\"buttonsWrapper\">\r\n                      <button\r\n                        className=\"cancel\"\r\n                        onClick={() => this.handleCloseEditModal()}\r\n                      >\r\n                        Anuluj\r\n                      </button>\r\n                      <button\r\n                        className=\"save\"\r\n                        onClick={() =>\r\n                          this.handleEditTherapist(\r\n                            fullName,\r\n                            aboutMe,\r\n                            selectedTherapistId\r\n                          )\r\n                        }\r\n                      >\r\n                        Zapisz\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {this.state.isModalOpen ? (\r\n            <div className=\"removeModalBackground\">\r\n              <div className=\"removeModal\">\r\n                <h1>Usunąć specjalistę?</h1>\r\n                <p>\r\n                  Czy na pewno chcesz usunąć tego specjalistę? Tej akcji nie\r\n                  można cofnąć.\r\n                </p>\r\n                <button\r\n                  className=\"cancel\"\r\n                  onClick={() => this.handleCloseRemoveModal()}\r\n                >\r\n                  Anuluj\r\n                </button>\r\n                <button\r\n                  className=\"remove\"\r\n                  onClick={() =>\r\n                    this.handleRemoveTherapist(selectedTherapistId)\r\n                  }\r\n                >\r\n                  Usuń\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"listWrapper\">\r\n            <div className=\"specialistsWrapper\">\r\n              <h2>Specjalista</h2>\r\n              {therapists && therapists !== null\r\n                ? therapists\r\n                    .slice(\r\n                      this.state.pagination.startIndex,\r\n                      this.state.pagination.endIndex\r\n                    )\r\n                    .map((therapist) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() =>\r\n                            this.handleClick(therapist.therapistId)\r\n                          }\r\n                          className=\"specialist\"\r\n                        >\r\n                          <img src={therapist.avatarUrl} alt=\"avatar\"></img>\r\n                          <li>{therapist.fullName}</li>\r\n                        </div>\r\n                      );\r\n                    })\r\n                : null}\r\n            </div>\r\n            <div className=\"specializationWrapper\">\r\n              <h2>Specjalizacje</h2>\r\n              {therapists && therapists !== null\r\n                ? therapists\r\n                    .slice(\r\n                      this.state.pagination.startIndex,\r\n                      this.state.pagination.endIndex\r\n                    )\r\n                    .map((therapist) => {\r\n                      return (\r\n                        <ul\r\n                          onClick={() =>\r\n                            this.handleClick(therapist.therapistId)\r\n                          }\r\n                          className=\"speciallization\"\r\n                        >\r\n                          <li>\r\n                            {\" \"}\r\n                            {therapist.specializations.length <= 3 ? null : (\r\n                              <div className=\"specInfo\">\r\n                                <div className=\"arrowSquare\"></div>\r\n                                {therapist.specializations.join(`, `)}\r\n                              </div>\r\n                            )}\r\n                            {therapist.specializations.length <= 3\r\n                              ? therapist.specializations.join(`, `)\r\n                              : therapist.specializations\r\n                                  .splice(0, 3)\r\n                                  .join(`, `) + \"...\"}\r\n                          </li>\r\n                        </ul>\r\n                      );\r\n                    })\r\n                : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"paginationWrapper\">\r\n            <Pagination\r\n              count={pagination.pageCount}\r\n              page={this.state.pageIndex}\r\n              onChange={(_, page) => {\r\n                this.handleSwitchPage(_, page);\r\n              }}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    therapists: state.main.therapists,\r\n    therapistDetails: state.main.therapistDetails,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTherapists: () => dispatch(fetchTherapists()),\r\n    fetchTherapistDetails: (id) => dispatch(fetchTherapistDetails(id)),\r\n    removeTherapist: (id) => dispatch(removeTherapist(id)),\r\n    editTherapist: (fullName, aboutMe, id) =>\r\n      dispatch(editTherapist(fullName, aboutMe, id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","export const fetchTherapists = () => {\r\n  return (dispatch) => {\r\n    fetch(`https://twojpsycholog.pl/lb-proxy/api-market/open/therapists`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ citySeoName: \"ONLINE\" }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) =>\r\n        dispatch({ type: \"FETCH_THERAPISTS\", data: data.therapists })\r\n      )\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n};\r\nexport const fetchTherapistDetails = (id) => {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `https://twojpsycholog.pl/lb-proxy/api-market/open/therapists/${id}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => dispatch({ type: \"FETCH_THERAPIST_DETAILS\", data }))\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const editTherapist = (fullName, aboutMe, id) => {\r\n  console.log(fullName, aboutMe, id);\r\n  let editedData = { fullName, aboutMe, id };\r\n  return (dispatch) => dispatch({ type: \"EDIT_THERAPIST\", data: editedData });\r\n};\r\n\r\nexport const removeTherapist = (id) => {\r\n  return (dispatch) => dispatch({ type: \"REMOVE_THERAPIST\", data: id });\r\n};\r\n","import List from \"./js/List\";\n\nfunction App() {\n  return <List />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n  therapists: null,\r\n  therapistDetails: null,\r\n};\r\n\r\nconst listReducers = (state = initState, action) => {\r\n  let newState = state;\r\n  switch (action.type) {\r\n    case \"FETCH_THERAPISTS\":\r\n      newState = {\r\n        ...state,\r\n        therapists: action.data,\r\n      };\r\n      break;\r\n\r\n    case \"FETCH_THERAPIST_DETAILS\":\r\n      newState = {\r\n        ...state,\r\n        therapistDetails: action.data,\r\n      };\r\n      break;\r\n\r\n    case \"EDIT_THERAPIST\":\r\n      let { fullName, aboutMe, id } = action.data;\r\n\r\n      const therapistToEdit = state.therapists.findIndex(\r\n        (e) => e.therapistId === id\r\n      );\r\n\r\n      let newList = [...state.therapists];\r\n\r\n      let editedTherapist = state.therapists[therapistToEdit];\r\n      editedTherapist.aboutMe = aboutMe;\r\n      editedTherapist.fullName = fullName;\r\n      newList[therapistToEdit] = editedTherapist;\r\n\r\n      newState = {\r\n        ...state,\r\n        newList: newList,\r\n      };\r\n      break;\r\n\r\n    case \"REMOVE_THERAPIST\":\r\n      const findTherapistToRemove = state.therapists.findIndex(\r\n        (e) => e.therapistId === action.data\r\n      );\r\n      function removeTherapistData() {\r\n        if (findTherapistToRemove !== -1) {\r\n          let newTherapistList = [...state.therapists];\r\n          newTherapistList.splice(findTherapistToRemove, 1);\r\n          return newTherapistList;\r\n        } else {\r\n          return state.newTherapistList;\r\n        }\r\n      }\r\n      const newAllItemsData = removeTherapistData();\r\n      newState = {\r\n        ...state,\r\n        therapists: newAllItemsData,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n  return newState;\r\n};\r\n\r\nexport default listReducers;\r\n","import mainReducer from \"./listReducers\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst appReducer = combineReducers({\r\n  main: mainReducer,\r\n});\r\n\r\nexport default appReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport reducer from \"./reducers/appReducer.js\";\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nmiddlewares.push(loggerMiddleware);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}